services:
  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    container_name: web
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
    networks:
      - coolify
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/status/database"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: bot/Dockerfile
    container_name: app
    environment:
      - NODE_ENV=production
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_SECRET_CLIENT=${DISCORD_SECRET_CLIENT}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
    networks:
      - coolify
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    restart: unless-stopped

networks:
  coolify:
    external: true
    name: coolify
